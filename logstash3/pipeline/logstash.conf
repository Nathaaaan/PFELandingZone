input {
  file {
              path => "/usr/tmp/output.txt"
          }

}

## Add your filters / logstash plugins configuration here

filter{
mutate{
add_field => {"url" => "%{[message]}"}
}



mutate {
gsub => [ "url", "token", "" ]
}

mutate {
gsub => [ "url", ":", "" ]
}

mutate {
gsub => [ "url", "https", "" ]
}

mutate {
gsub => [ "url", "\"", "" ]
}

mutate {
gsub => [ "url", "{", "" ]
}

mutate {
gsub => [ "url", "}", "" ]
}

mutate{
add_field => {"urlFinal" => "https:%{url}"}
}

mutate{
add_field => {"resmsg" => ""}
}

ruby {
init => "
   require 'net/http'
   require 'uri'
   require 'json'
 "

 code => '
            # sleep(3)
            jsonString = event.get("urlFinal")
            uri = URI.parse(jsonString)
            res = Net::HTTP.get_response(uri)
            secondres = JSON.parse(res.body)

            event.set("resmsg",secondres);
            event.set("provider", "GCP");
            # sleep(3)
    '
  }

 mutate{
 add_field => {"serviceCode" => "%{[resmsg][skus][0][name]}"}
 }

 mutate{
  add_field => {"serviceDescription" => "%{[resmsg][skus][0][description]}"}
  }

  mutate{
    add_field => {"serviceID" => "%{[resmsg][skus][0][skuId]}"}
    }


  mutate{
      add_field => {"serviceCategory" => "%{[resmsg][skus][0][category][serviceDisplayName]}"}
      }

  mutate{
        add_field => {"serviceProviderResourceGroup" => "%{[resmsg][skus][0][category][resourceGroup]}"}
        }

  mutate{
        add_field => {"servicePriceUnits" => "%{[resmsg][skus][0][pricingInfo][0][pricingExpression][tieredRates][0][unitPrice][units]}"}
        }

mutate{
        add_field => {"servicePriceNanos" => "%{[resmsg][skus][0][pricingInfo][0][pricingExpression][tieredRates][0][unitPrice][nanos]}"}
        }

ruby {

 code => '
            nanoPrice = event.get("servicePriceNanos")
            nanoPriceF = nanoPrice.to_f
            unitPrice = event.get("servicePriceUnits")
            for i in 1..9
                nanoPriceF = nanoPriceF * 0.01
            end

            fullPrice = unitPrice.to_f + nanoPriceF
            fullPrice = fullPrice * 0.87

            event.set("serviceFullPrice",fullPrice);
    '

}
}

output {

stdout {
	codec => 'rubydebug'}

	elasticsearch {
        index => "gcptemp"
        document_type => "_doc"
    		hosts => "elasticsearch:9200"
    		user => "elastic"
    		password => "changeme"
    	}



}
